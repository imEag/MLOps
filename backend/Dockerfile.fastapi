FROM python:3.11-slim

# Build arguments to control optional behaviors
ARG SOVAHARMONY_MODE=wheel  # values: wheel | editable

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    python3-tk \
    graphviz \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install poetry
RUN pip install --no-cache-dir poetry==1.4.2

# Copy only dependency files first
COPY pyproject.toml poetry.lock* ./

# Configure poetry and install dependencies
RUN poetry config virtualenvs.create false \
    && poetry install --no-interaction --no-ansi --no-root

# Copy the rest of the application
COPY . .

# Install internal vendored wheel(s) if present
COPY vendor /app/vendor
RUN python -m pip install --upgrade pip \
 && echo "Installing sovaharmony mode=$SOVAHARMONY_MODE" \
 && if [ "$SOVAHARMONY_MODE" = "editable" ] && [ -d /app/vendor/sovaharmony ]; then \
        pip install --no-deps -e /app/vendor/sovaharmony ; \
    elif ls /app/vendor/sovaharmony-*.whl 1> /dev/null 2>&1; then \
        pip install /app/vendor/sovaharmony-*.whl ; \
    else \
        echo "No sovaharmony artifact found (wheel or source)" ; \
    fi

# Set environment variables
ENV PYTHONPATH=/app
ENV MLFLOW_TRACKING_URI=http://mlflow:5001
ENV PYTHONUNBUFFERED=1

# Expose the FastAPI port
EXPOSE 8000

# Run FastAPI with uvicorn
CMD ["poetry", "run", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug", "--access-log"] 