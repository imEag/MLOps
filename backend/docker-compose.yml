version: '3.8'

services:
  postgres:
    image: postgres:15
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-mlops}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - mlops-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    ports:
      - "${MLFLOW_PORT:-5000}:5000"
    volumes:
      - ./mlruns:/mlflow/mlruns
    environment:
      - MLFLOW_TRACKING_URI=http://localhost:${MLFLOW_PORT:-5000}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-mlops}
    depends_on:
      - postgres
    networks:
      - mlops-network

  prefect:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PREFECT_PORT:-4200}:4200"
    volumes:
      - .:/app
    environment:
      - PREFECT_API_URL=http://0.0.0.0:4200/api
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-mlops}
      - PREFECT_SERVER_HOST=0.0.0.0
      - PREFECT_SERVER_PORT=4200
    depends_on:
      - mlflow
      - postgres
    networks:
      - mlops-network

volumes:
  postgres_data:

networks:
  mlops-network:
    driver: bridge 